@page
@model QuestionPool.Pages.question.IndexModel

@{
    ViewData["Title"] = "Index";
    string layout = "_Layout";
    if (User.IsInRole("Admin"))
    {
        layout = "_LayoutForAdmin";
    }
    Layout = layout;
}
<head>
    <meta charset="utf-8" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assets/images/favicon.ico">

    <!-- Theme Config Js -->
    <script src="~/assets/js/head.js"></script>
    <!-- Bootstrap Tables css -->
    <link href="~/assets/libs/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" type="text/css" />
    <!-- Bootstrap css -->
    <link href="~/assets/css/bootstrap.min.css" rel="stylesheet" type="text/css" id="app-style" />

    <!-- App css -->
    <link href="~/assets/css/app.min.css" rel="stylesheet" type="text/css" />

    <!-- Icons css -->
    <link href="~/assets/css/icons.min.css" rel="stylesheet" type="text/css" />
    <style>
        .bootstrap-table .fixed-table-toolbar {
            float: left;
        }
    </style>
</head>
<div class="content">

    <!-- Start Content-->
    <div class="container-fluid">

        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box">
                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item"><a href="javascript: void(0);">ExamQuestionPool</a></li>
                            <li class="breadcrumb-item"><a href="javascript: void(0);">Question List</a></li>

                        </ol>
                    </div>
                    <h4 class="page-title">Question List</h4>
                </div>
            </div>
        </div>
        <!-- end page title -->
        @* subject start*@

        <p>
            <a asp-page="Create" class="btn btn-info waves-effect waves-light">Create New</a>
        </p>
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="demo-custom-toolbar" class="table-border" data-toggle="table" data-toolbar="#demo-delete-row" data-toolbar-align="left" data-search="true"
                                   data-show-refresh="true" data-show-columns="true" data-sort-name="id" data-page-list="[5,10,15,20]"
                                   data-page-size="5" data-pagination="true" data-show-pagination-switch="true">
                                <thead class="table-light">
                                    <tr>
                                    <th>
                                       No.
                                    </th>
                                        <th data-field="name" data-sortable="true">@Html.DisplayNameFor(model => model.Question[0].Name)</th>
                                        <th data-field ="questions">@Html.DisplayNameFor(model => model.Question[0].Questions)</th>
                                        <th data-field="choice">@Html.DisplayNameFor(model => model.Question[0].Choice)</th>
                                        <th data-sortable="true">@Html.DisplayNameFor(model => model.Question[0].Mark)</th>
                                        <th data-field="image">@Html.DisplayNameFor(model => model.Question[0].Image)</th>
                                        <th data-field="exam type">@Html.DisplayNameFor(model => model.Question[0].ExamType)</th>
                                        <th data-field="subject" data-sortable="true">@Html.DisplayNameFor(model => model.Question[0].Subject)</th>
                                        <th data-field="term" data-sortable="true">@Html.DisplayNameFor(model => model.Question[0].Term)</th>
                                        <th>@Html.DisplayNameFor(model => model.QuestionAnswer[0].Answer)</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Question)
                                    {
                                        <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.QuestionNumber)
                                        </td>
                                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                            <td>@Html.Raw(item.Questions)</td>
                                            <td class="choice">
                                                <span class="collapsed-content">@Html.DisplayFor(modelItem => item.Choice)</span>
                                                <a href="#" class="expand-button">Show Choice</a>
                                            </td>
                                            <td>@Html.DisplayFor(modelItem => item.Mark)</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.Image))
                                                {
                                                    <img src="@item.Image" class="img-fluid" />
                                                }
                                                else
                                                {
                                                    <span>No image available</span>
                                                }
                                            </td>
                                            <td>@Html.DisplayFor(modelItem => item.ExamType.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Subject.Name)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Term.Name)</td>
                                            <td>
                                                @if (item.QuestionAnswer.Any())
                                                {
                                                    <ul>
                                                        @foreach (var answer in item.QuestionAnswer)
                                                        {
                                                            @Html.Raw($"<li>{answer.Answer}</li>")
                                                        }
                                                    </ul>
                                                }
                                                else
                                                {
                                                    <p>No answers available</p>
                                                }
                                                </td>
                                            <td>
                                                <div class="btn-group">
                                                <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"> Action </button>
                                                    <div class="dropdown-menu dropdown-menu-start" style="justify-content:left">
                                                        <a asp-page="./Edit" asp-route-id="@item.Id" class="dropdown-item"><i class="far fa-edit" style="color:deepskyblue"></i>Edit</a>
                                                        <a asp-page="./Delete" asp-route-id="@item.Id" class="dropdown-item"><i class="fe-x-square" style="color:red"></i>Delete</a>
                                                        <a asp-page="/answer/Create" asp-route-questionId="@item.Id" class="dropdown-item"><i class="fas fa-plus-circle" style="color:yellow"></i>Answer</a>
                                                </div>   
                                                </div>
                                            </td>
                                        </tr>
                                            }
                                </tbody>
                            </table>
                            </div>
                    </div>
                </div> <!-- end card-->
            </div> <!-- end col-->
        </div>
        <!-- end row-->
    </div> <!-- container -->

</div> <!-- content -->
<!-- Vendor js -->
<script src="~/assets/js/vendor.min.js"></script>
<!-- Bootstrap Tables js -->
<script src="~/assets/libs/bootstrap-table/bootstrap-table.min.js"></script>

<!-- Init js -->
<script src="~/assets/js/pages/bootstrap-tables.init.js"></script>
@section Scripts {
    <script>
        $(document).ready(function () {
            var subjectId = "@Model.selectedSubjectId";
            if (subjectId) {
                loadQuestions(subjectId);
            }
        });

        function loadQuestions(subjectId) {
            $.ajax({
                url: '/Question/GetQuestionsBySubjectId',
                type: 'GET',
                data: { subjectId: subjectId },
                success: function (data) {
                    $('#dataTable tbody').empty();
                    $.each(data, function (index, item) {
                        var row = $('<tr>');
                        row.append('<td>' + item.QuestionNumber + '</td>');
                        row.append('<td>' + item.Name + '</td>');
                        row.append('<td>' + item.Questions + '</td>');
                        row.append('<td>' + item.Choice + '</td>');
                        row.append('<td>' + item.Mark + '</td>');
                        row.append('<td>' + item.Image + '</td>');
                        row.append('<td>' + item.ExamType.Name + '</td>');
                        row.append('<td>' + item.Subject.Name + '</td>');
                        row.append('<td>' + item.Term.Name + '</td>');
                        row.append('<td><a href="/Question/Edit/' + item.Id + '" class="btn btn-soft-info waves-effect waves-light"><i class="fe-edit"></i></a> <a href="/Question/Delete/' + item.Id + '" class="btn btn-soft-danger waves-effect waves-light"><i class="fe-x-square"></i></a></td>');
                        $('#dataTable tbody').append(row);
                    });
                },
                error: function () {
                    alert('Failed to load questions.');
                }
            });
        }

            $(document).ready(function () {
                $(".collapsed-content").hide(); // 初始状态设为关闭
                $(".expand-button").click(function () {
                    var content = $(this).prev(".collapsed-content");
                    content.toggle(); // 切换显示状态
                    var text = content.is(":visible") ? "Close" : "Show Choice";
                    $(this).text(text);
                    return false; // 防止链接跳转
                });
            });
        var pageSizes = [5,10,15,20];

        $(document).ready(function () {
            var pageListHtml = '';
            $.each(pageSizes, function (index, value) {
                pageListHtml += '<option value="' + value + '">' + value + '</option>';
            });
            $('#demo-custom-toolbar').attr('data-page-list', JSON.stringify(pageSizes));
        });
    </script>
}
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />
@* <h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].QuestionNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Questions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Choice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Mark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].DataAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].IsDeleted)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].CreatedByUserDetails)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].ExamType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Subject)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Question[0].Term)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Question) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuestionNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Questions)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Choice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Mark)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataAdded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedByUserDetails.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ExamType.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Subject.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Term.Id)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
